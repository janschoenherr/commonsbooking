{"version":3,"file":"vendor.js","mappings":"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","names":["E","prototype","on","name","callback","ctx","e","push","fn","once","self","listener","off","apply","arguments","_","emit","data","slice","call","evtArr","i","len","length","evts","liveEvents","tinyEmitterModule","proto","Element","vendor","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","match","el","selector","nodeType","nodes","parentNode","querySelectorAll","throttleit","throttle","func","wait","args","rtn","timeoutID","last","throttled","delta","Date","setTimeout","arrayParallel","parallel","fns","context","noop","pending","finished","results","Array","forEach","maybeDone","err","result","getNumber","value","parseFloat","Point","x","y","_classCallCheck","a","b","Rect","w","h","id","left","top","width","height","BASE","SHUFFLE_ITEM","VISIBLE","HIDDEN","ShuffleItem","element","isRTL","isVisible","isHidden","classList","remove","Classes","add","removeAttribute","setAttribute","addClasses","applyCss","Css","INITIAL","DIRECTION","rtl","ltr","scale","Scale","point","classes","className","_this","_this2","obj","Object","keys","key","_this3","style","removeClasses","position","visibility","willChange","right","before","opacity","after","transitionDelay","testComputedSize","document","body","documentElement","createElement","cssText","appendChild","window","getComputedStyle","Math","round","removeChild","getNumberStyle","styles","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","borderTopWidth","borderBottomWidth","randomize","array","n","floor","random","temp","defaults","reverse","by","compare","sorter","arr","options","opts","assign","original","from","revert","sort","valA","valB","undefined","transitions","eventName","count","uniqueId","cancelTransitionEnd","removeEventListener","onTransitionEnd","evt","currentTarget","target","addEventListener","arrayMax","max","arrayMin","min","getColumnSpan","itemWidth","columnWidth","columns","threshold","columnSpan","abs","ceil","getAvailablePositions","positions","available","getShortColumn","buffer","minPosition","getItemPosition","itemSize","gridSize","total","span","setY","shortColumnIndex","setHeight","getCenteredPositions","itemRects","containerWidth","rowMap","itemRect","rects","rows","centeredRows","lastItem","end","offset","finalRects","canMove","newRects","every","r","newRect","noOverlap","some","intersects","intersectingRect","hasOverlap","rowIndex","findIndex","items","includes","splice","concat","map","hyphenate","str","replace","m1","toLowerCase","arrayUnique","Set","Shuffle","delimeter","delimiter","lastSort","group","ALL_ITEMS","lastFilter","isEnabled","isDestroyed","isInitialized","_transitions","isTransitioning","_queue","_getElementOption","TypeError","_init","_getItems","sortedItems","sizer","_initItems","_onResize","_getResizeFunction","readyState","layout","bind","onLoad","containerCss","getSize","_validateStyles","_setColumns","filter","initialSort","offsetWidth","setItemTransitions","transition","speed","easing","resizeFunction","_handleResize","throttleTime","option","querySelector","jquery","overflow","category","collection","set","_getFilteredSets","_toggleFilterClasses","visible","hidden","item","_doesPassFilter","attr","getAttribute","FILTER_ATTRIBUTE_KEY","split","JSON","parse","testCategory","isArray","filterMode","FilterMode","ANY","show","hide","init","dispose","visibleItems","_getFilteredItems","positionProps","useTransforms","cssProps","k","properties","join","transitionDuration","transitionTimingFunction","transitionProperty","children","itemSelector","indexOf","gutterSize","size","gutterWidth","gutter","_getGutterSize","_getColumnSize","calculatedColumns","columnThreshold","cols","colWidth","_getContainerSize","index","staggerAmount","staggerAmountMax","shuffle","itemPositions","_getNextPositions","equals","_this4","getStylesForTransition","_getStaggerAmount","isCentered","itemsData","_this5","_getItemPosition","getTransformedPositions","_getConcealedItems","_this6","update","styleObject","sign","roundTransforms","transform","itemCallback","done","_this7","_whenTransitionDone","_cancelMovement","hasSpeed","hasQueue","_startTransitions","_styleImmediately","_dispatch","EventType","LAYOUT","callbacks","_this8","_getTransitionFunction","_movementFinished","objects","elements","_skipTransitions","sortOptions","_filter","_shrink","_updateItemCount","_resetCols","_layout","_processQueue","_setContainerSize","isOnlyLayout","newItems","_this9","allItems","_mergeNewItems","allSortedItemsSet","isNewItem","applyHiddenState","isUpdateLayout","oldItems","_this10","getItemByElement","handleLayout","_disposeItems","REMOVED","find","_this11","includeMargins","marginLeft","marginRight","marginTop","marginBottom","zero","duration","delay","TinyEmitter","ALL","__sorter","__getColumnSpan","__getAvailablePositions","__getShortColumn","__getCenteredPositions"],"sources":["../node_modules/tiny-emitter/index.js","../node_modules/matches-selector/index.js","../node_modules/throttleit/index.js","../node_modules/array-parallel/index.js","../src/get-number.js","../src/point.js","../src/rect.js","../src/classes.js","../src/shuffle-item.js","../src/computed-size.js","../src/get-number-style.js","../src/sorter.js","../src/on-transition-end.js","../src/array-max.js","../src/array-min.js","../src/layout.js","../src/hyphenate.js","../src/shuffle.js"],"sourcesContent":["function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n","'use strict';\n\nvar proto = typeof Element !== 'undefined' ? Element.prototype : {};\nvar vendor = proto.matches\n  || proto.matchesSelector\n  || proto.webkitMatchesSelector\n  || proto.mozMatchesSelector\n  || proto.msMatchesSelector\n  || proto.oMatchesSelector;\n\nmodule.exports = match;\n\n/**\n * Match `el` to `selector`.\n *\n * @param {Element} el\n * @param {String} selector\n * @return {Boolean}\n * @api public\n */\n\nfunction match(el, selector) {\n  if (!el || el.nodeType !== 1) return false;\n  if (vendor) return vendor.call(el, selector);\n  var nodes = el.parentNode.querySelectorAll(selector);\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i] == el) return true;\n  }\n  return false;\n}\n","module.exports = throttle;\n\n/**\n * Returns a new function that, when invoked, invokes `func` at most once per `wait` milliseconds.\n *\n * @param {Function} func Function to wrap.\n * @param {Number} wait Number of milliseconds that must elapse between `func` invocations.\n * @return {Function} A new function that wraps the `func` function passed in.\n */\n\nfunction throttle (func, wait) {\n  var ctx, args, rtn, timeoutID; // caching\n  var last = 0;\n\n  return function throttled () {\n    ctx = this;\n    args = arguments;\n    var delta = new Date() - last;\n    if (!timeoutID)\n      if (delta >= wait) call();\n      else timeoutID = setTimeout(call, wait - delta);\n    return rtn;\n  };\n\n  function call () {\n    timeoutID = 0;\n    last = +new Date();\n    rtn = func.apply(ctx, args);\n    ctx = null;\n    args = null;\n  }\n}\n","module.exports = function parallel(fns, context, callback) {\n  if (!callback) {\n    if (typeof context === 'function') {\n      callback = context\n      context = null\n    } else {\n      callback = noop\n    }\n  }\n\n  var pending = fns && fns.length\n  if (!pending) return callback(null, []);\n\n  var finished = false\n  var results = new Array(pending)\n\n  fns.forEach(context ? function (fn, i) {\n    fn.call(context, maybeDone(i))\n  } : function (fn, i) {\n    fn(maybeDone(i))\n  })\n\n  function maybeDone(i) {\n    return function (err, result) {\n      if (finished) return;\n\n      if (err) {\n        callback(err, results)\n        finished = true\n        return\n      }\n\n      results[i] = result\n\n      if (!--pending) callback(null, results);\n    }\n  }\n}\n\nfunction noop() {}\n","/**\n * Always returns a numeric value, given a value. Logic from jQuery's `isNumeric`.\n * @param {*} value Possibly numeric value.\n * @return {number} `value` or zero if `value` isn't numeric.\n */\nexport default function getNumber(value) {\n  return parseFloat(value) || 0;\n}\n","import getNumber from './get-number';\n\nclass Point {\n  /**\n   * Represents a coordinate pair.\n   * @param {number} [x=0] X.\n   * @param {number} [y=0] Y.\n   */\n  constructor(x, y) {\n    this.x = getNumber(x);\n    this.y = getNumber(y);\n  }\n\n  /**\n   * Whether two points are equal.\n   * @param {Point} a Point A.\n   * @param {Point} b Point B.\n   * @return {boolean}\n   */\n  static equals(a, b) {\n    return a.x === b.x && a.y === b.y;\n  }\n}\n\nexport default Point;\n","export default class Rect {\n  /**\n   * Class for representing rectangular regions.\n   * https://github.com/google/closure-library/blob/master/closure/goog/math/rect.js\n   * @param {number} x Left.\n   * @param {number} y Top.\n   * @param {number} w Width.\n   * @param {number} h Height.\n   * @param {number} id Identifier\n   * @constructor\n   */\n  constructor(x, y, w, h, id) {\n    this.id = id;\n\n    /** @type {number} */\n    this.left = x;\n\n    /** @type {number} */\n    this.top = y;\n\n    /** @type {number} */\n    this.width = w;\n\n    /** @type {number} */\n    this.height = h;\n  }\n\n  /**\n   * Returns whether two rectangles intersect.\n   * @param {Rect} a A Rectangle.\n   * @param {Rect} b A Rectangle.\n   * @return {boolean} Whether a and b intersect.\n   */\n  static intersects(a, b) {\n    return (\n      a.left < b.left + b.width && b.left < a.left + a.width\n      && a.top < b.top + b.height && b.top < a.top + a.height);\n  }\n}\n","export default {\n  BASE: 'shuffle',\n  SHUFFLE_ITEM: 'shuffle-item',\n  VISIBLE: 'shuffle-item--visible',\n  HIDDEN: 'shuffle-item--hidden',\n};\n","import Point from './point';\nimport Classes from './classes';\n\nlet id = 0;\n\nclass ShuffleItem {\n  constructor(element, isRTL) {\n    id += 1;\n    this.id = id;\n    this.element = element;\n\n    /**\n     * Set correct direction of item\n     */\n    this.isRTL = isRTL;\n\n    /**\n     * Used to separate items for layout and shrink.\n     */\n    this.isVisible = true;\n\n    /**\n     * Used to determine if a transition will happen. By the time the _layout\n     * and _shrink methods get the ShuffleItem instances, the `isVisible` value\n     * has already been changed by the separation methods, so this property is\n     * needed to know if the item was visible/hidden before the shrink/layout.\n     */\n    this.isHidden = false;\n  }\n\n  show() {\n    this.isVisible = true;\n    this.element.classList.remove(Classes.HIDDEN);\n    this.element.classList.add(Classes.VISIBLE);\n    this.element.removeAttribute('aria-hidden');\n  }\n\n  hide() {\n    this.isVisible = false;\n    this.element.classList.remove(Classes.VISIBLE);\n    this.element.classList.add(Classes.HIDDEN);\n    this.element.setAttribute('aria-hidden', true);\n  }\n\n  init() {\n    this.addClasses([Classes.SHUFFLE_ITEM, Classes.VISIBLE]);\n    this.applyCss(ShuffleItem.Css.INITIAL);\n    this.applyCss(this.isRTL ? ShuffleItem.Css.DIRECTION.rtl : ShuffleItem.Css.DIRECTION.ltr);\n    this.scale = ShuffleItem.Scale.VISIBLE;\n    this.point = new Point();\n  }\n\n  addClasses(classes) {\n    classes.forEach((className) => {\n      this.element.classList.add(className);\n    });\n  }\n\n  removeClasses(classes) {\n    classes.forEach((className) => {\n      this.element.classList.remove(className);\n    });\n  }\n\n  applyCss(obj) {\n    Object.keys(obj).forEach((key) => {\n      this.element.style[key] = obj[key];\n    });\n  }\n\n  dispose() {\n    this.removeClasses([\n      Classes.HIDDEN,\n      Classes.VISIBLE,\n      Classes.SHUFFLE_ITEM,\n    ]);\n\n    this.element.removeAttribute('style');\n    this.element = null;\n  }\n}\n\nShuffleItem.Css = {\n  INITIAL: {\n    position: 'absolute',\n    top: 0,\n    visibility: 'visible',\n    willChange: 'transform',\n  },\n  DIRECTION: {\n    ltr: {\n      left: 0,\n    },\n    rtl: {\n      right: 0,\n    },\n  },\n  VISIBLE: {\n    before: {\n      opacity: 1,\n      visibility: 'visible',\n    },\n    after: {\n      transitionDelay: '',\n    },\n  },\n  HIDDEN: {\n    before: {\n      opacity: 0,\n    },\n    after: {\n      visibility: 'hidden',\n      transitionDelay: '',\n    },\n  },\n};\n\nShuffleItem.Scale = {\n  VISIBLE: 1,\n  HIDDEN: 0.001,\n};\n\nexport default ShuffleItem;\n","import getNumber from './get-number';\n\nlet value = null;\nexport default () => {\n  if (value !== null) {\n    return value;\n  }\n\n  const element = document.body || document.documentElement;\n  const e = document.createElement('div');\n  e.style.cssText = 'width:10px;padding:2px;box-sizing:border-box;';\n  element.appendChild(e);\n\n  const { width } = window.getComputedStyle(e, null);\n  // Fix for issue #314\n  value = Math.round(getNumber(width)) === 10;\n\n  element.removeChild(e);\n\n  return value;\n};\n","import getNumber from './get-number';\nimport testComputedSize from './computed-size';\n\n/**\n * Retrieve the computed style for an element, parsed as a float.\n * @param {Element} element Element to get style for.\n * @param {string} style Style property.\n * @param {CSSStyleDeclaration} [styles] Optionally include clean styles to\n *     use instead of asking for them again.\n * @return {number} The parsed computed value or zero if that fails because IE\n *     will return 'auto' when the element doesn't have margins instead of\n *     the computed style.\n */\nexport default function getNumberStyle(\n  element, style,\n  styles = window.getComputedStyle(element, null),\n) {\n  let value = getNumber(styles[style]);\n\n  // Support IE<=11 and W3C spec.\n  if (!testComputedSize() && style === 'width') {\n    value += getNumber(styles.paddingLeft)\n      + getNumber(styles.paddingRight)\n      + getNumber(styles.borderLeftWidth)\n      + getNumber(styles.borderRightWidth);\n  } else if (!testComputedSize() && style === 'height') {\n    value += getNumber(styles.paddingTop)\n      + getNumber(styles.paddingBottom)\n      + getNumber(styles.borderTopWidth)\n      + getNumber(styles.borderBottomWidth);\n  }\n\n  return value;\n}\n","/**\n * Fisher-Yates shuffle.\n * http://stackoverflow.com/a/962890/373422\n * https://bost.ocks.org/mike/shuffle/\n * @param {Array} array Array to shuffle.\n * @return {Array} Randomly sorted array.\n */\nfunction randomize(array) {\n  let n = array.length;\n\n  while (n) {\n    n -= 1;\n    const i = Math.floor(Math.random() * (n + 1));\n    const temp = array[i];\n    array[i] = array[n];\n    array[n] = temp;\n  }\n\n  return array;\n}\n\nconst defaults = {\n  // Use array.reverse() to reverse the results\n  reverse: false,\n\n  // Sorting function\n  by: null,\n\n  // Custom sort function\n  compare: null,\n\n  // If true, this will skip the sorting and return a randomized order in the array\n  randomize: false,\n\n  // Determines which property of each item in the array is passed to the\n  // sorting method.\n  key: 'element',\n};\n\n/**\n * You can return `undefined` from the `by` function to revert to DOM order.\n * @param {Array<T>} arr Array to sort.\n * @param {SortOptions} options Sorting options.\n * @return {Array<T>}\n */\nexport default function sorter(arr, options) {\n  // eslint-disable-next-line prefer-object-spread\n  const opts = Object.assign({}, defaults, options);\n  const original = Array.from(arr);\n  let revert = false;\n\n  if (!arr.length) {\n    return [];\n  }\n\n  if (opts.randomize) {\n    return randomize(arr);\n  }\n\n  // Sort the elements by the opts.by function.\n  // If we don't have opts.by, default to DOM order\n  if (typeof opts.by === 'function') {\n    arr.sort((a, b) => {\n      // Exit early if we already know we want to revert\n      if (revert) {\n        return 0;\n      }\n\n      const valA = opts.by(a[opts.key]);\n      const valB = opts.by(b[opts.key]);\n\n      // If both values are undefined, use the DOM order\n      if (valA === undefined && valB === undefined) {\n        revert = true;\n        return 0;\n      }\n\n      if (valA < valB || valA === 'sortFirst' || valB === 'sortLast') {\n        return -1;\n      }\n\n      if (valA > valB || valA === 'sortLast' || valB === 'sortFirst') {\n        return 1;\n      }\n\n      return 0;\n    });\n  } else if (typeof opts.compare === 'function') {\n    arr.sort(opts.compare);\n  }\n\n  // Revert to the original array if necessary\n  if (revert) {\n    return original;\n  }\n\n  if (opts.reverse) {\n    arr.reverse();\n  }\n\n  return arr;\n}\n","const transitions = {};\nconst eventName = 'transitionend';\nlet count = 0;\n\nfunction uniqueId() {\n  count += 1;\n  return eventName + count;\n}\n\nexport function cancelTransitionEnd(id) {\n  if (transitions[id]) {\n    transitions[id].element.removeEventListener(eventName, transitions[id].listener);\n    transitions[id] = null;\n    return true;\n  }\n\n  return false;\n}\n\nexport function onTransitionEnd(element, callback) {\n  const id = uniqueId();\n  const listener = (evt) => {\n    if (evt.currentTarget === evt.target) {\n      cancelTransitionEnd(id);\n      callback(evt);\n    }\n  };\n\n  element.addEventListener(eventName, listener);\n\n  transitions[id] = { element, listener };\n\n  return id;\n}\n","export default function arrayMax(array) {\n  return Math.max.apply(Math, array); // eslint-disable-line prefer-spread\n}\n","export default function arrayMin(array) {\n  return Math.min.apply(Math, array); // eslint-disable-line prefer-spread\n}\n","import Point from './point';\nimport Rect from './rect';\nimport arrayMax from './array-max';\nimport arrayMin from './array-min';\n\n/**\n * Determine the number of columns an items spans.\n * @param {number} itemWidth Width of the item.\n * @param {number} columnWidth Width of the column (includes gutter).\n * @param {number} columns Total number of columns\n * @param {number} threshold A buffer value for the size of the column to fit.\n * @return {number}\n */\nexport function getColumnSpan(itemWidth, columnWidth, columns, threshold) {\n  let columnSpan = itemWidth / columnWidth;\n\n  // If the difference between the rounded column span number and the\n  // calculated column span number is really small, round the number to\n  // make it fit.\n  if (Math.abs(Math.round(columnSpan) - columnSpan) < threshold) {\n    // e.g. columnSpan = 4.0089945390298745\n    columnSpan = Math.round(columnSpan);\n  }\n\n  // Ensure the column span is not more than the amount of columns in the whole layout.\n  return Math.min(Math.ceil(columnSpan), columns);\n}\n\n/**\n * Retrieves the column set to use for placement.\n * @param {number} columnSpan The number of columns this current item spans.\n * @param {number} columns The total columns in the grid.\n * @return {Array.<number>} An array of numbers represeting the column set.\n */\nexport function getAvailablePositions(positions, columnSpan, columns) {\n  // The item spans only one column.\n  if (columnSpan === 1) {\n    return positions;\n  }\n\n  // The item spans more than one column, figure out how many different\n  // places it could fit horizontally.\n  // The group count is the number of places within the positions this block\n  // could fit, ignoring the current positions of items.\n  // Imagine a 2 column brick as the second item in a 4 column grid with\n  // 10px height each. Find the places it would fit:\n  // [20, 10, 10, 0]\n  //  |   |   |\n  //  *   *   *\n  //\n  // Then take the places which fit and get the bigger of the two:\n  // max([20, 10]), max([10, 10]), max([10, 0]) = [20, 10, 10]\n  //\n  // Next, find the first smallest number (the short column).\n  // [20, 10, 10]\n  //      |\n  //      *\n  //\n  // And that's where it should be placed!\n  //\n  // Another example where the second column's item extends past the first:\n  // [10, 20, 10, 0] => [20, 20, 10] => 10\n  const available = [];\n\n  // For how many possible positions for this item there are.\n  for (let i = 0; i <= columns - columnSpan; i++) {\n    // Find the bigger value for each place it could fit.\n    available.push(arrayMax(positions.slice(i, i + columnSpan)));\n  }\n\n  return available;\n}\n\n/**\n * Find index of short column, the first from the left where this item will go.\n *\n * @param {Array.<number>} positions The array to search for the smallest number.\n * @param {number} buffer Optional buffer which is very useful when the height\n *     is a percentage of the width.\n * @return {number} Index of the short column.\n */\nexport function getShortColumn(positions, buffer) {\n  const minPosition = arrayMin(positions);\n  for (let i = 0, len = positions.length; i < len; i++) {\n    if (positions[i] >= minPosition - buffer && positions[i] <= minPosition + buffer) {\n      return i;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * Determine the location of the next item, based on its size.\n * @param {Object} itemSize Object with width and height.\n * @param {Array.<number>} positions Positions of the other current items.\n * @param {number} gridSize The column width or row height.\n * @param {number} total The total number of columns or rows.\n * @param {number} threshold Buffer value for the column to fit.\n * @param {number} buffer Vertical buffer for the height of items.\n * @return {Point}\n */\nexport function getItemPosition({\n  itemSize, positions, gridSize, total, threshold, buffer,\n}) {\n  const span = getColumnSpan(itemSize.width, gridSize, total, threshold);\n  const setY = getAvailablePositions(positions, span, total);\n  const shortColumnIndex = getShortColumn(setY, buffer);\n\n  // Position the item\n  const point = new Point(gridSize * shortColumnIndex, setY[shortColumnIndex]);\n\n  // Update the columns array with the new values for each column.\n  // e.g. before the update the columns could be [250, 0, 0, 0] for an item\n  // which spans 2 columns. After it would be [250, itemHeight, itemHeight, 0].\n  const setHeight = setY[shortColumnIndex] + itemSize.height;\n  for (let i = 0; i < span; i++) {\n    positions[shortColumnIndex + i] = setHeight;\n  }\n\n  return point;\n}\n\n/**\n * This method attempts to center items. This method could potentially be slow\n * with a large number of items because it must place items, then check every\n * previous item to ensure there is no overlap.\n * @param {Array.<Rect>} itemRects Item data objects.\n * @param {number} containerWidth Width of the containing element.\n * @return {Array.<Point>}\n */\nexport function getCenteredPositions(itemRects, containerWidth) {\n  const rowMap = {};\n\n  // Populate rows by their offset because items could jump between rows like:\n  // a   c\n  //  bbb\n  itemRects.forEach((itemRect) => {\n    if (rowMap[itemRect.top]) {\n      // Push the point to the last row array.\n      rowMap[itemRect.top].push(itemRect);\n    } else {\n      // Start of a new row.\n      rowMap[itemRect.top] = [itemRect];\n    }\n  });\n\n  // For each row, find the end of the last item, then calculate\n  // the remaining space by dividing it by 2. Then add that\n  // offset to the x position of each point.\n  let rects = [];\n  const rows = [];\n  const centeredRows = [];\n  Object.keys(rowMap).forEach((key) => {\n    const itemRects = rowMap[key];\n    rows.push(itemRects);\n    const lastItem = itemRects[itemRects.length - 1];\n    const end = lastItem.left + lastItem.width;\n    const offset = Math.round((containerWidth - end) / 2);\n\n    let finalRects = itemRects;\n    let canMove = false;\n    if (offset > 0) {\n      const newRects = [];\n      canMove = itemRects.every((r) => {\n        const newRect = new Rect(r.left + offset, r.top, r.width, r.height, r.id);\n\n        // Check all current rects to make sure none overlap.\n        const noOverlap = !rects.some((r) => Rect.intersects(newRect, r));\n\n        newRects.push(newRect);\n        return noOverlap;\n      });\n\n      // If none of the rectangles overlapped, the whole group can be centered.\n      if (canMove) {\n        finalRects = newRects;\n      }\n    }\n\n    // If the items are not going to be offset, ensure that the original\n    // placement for this row will not overlap previous rows (row-spanning\n    // elements could be in the way).\n    if (!canMove) {\n      let intersectingRect;\n      const hasOverlap = itemRects.some((itemRect) => rects.some((r) => {\n        const intersects = Rect.intersects(itemRect, r);\n        if (intersects) {\n          intersectingRect = r;\n        }\n        return intersects;\n      }));\n\n      // If there is any overlap, replace the overlapping row with the original.\n      if (hasOverlap) {\n        const rowIndex = centeredRows.findIndex((items) => items.includes(intersectingRect));\n        centeredRows.splice(rowIndex, 1, rows[rowIndex]);\n      }\n    }\n\n    rects = rects.concat(finalRects);\n    centeredRows.push(finalRects);\n  });\n\n  // Reduce array of arrays to a single array of points.\n  // https://stackoverflow.com/a/10865042/373422\n  // Then reset sort back to how the items were passed to this method.\n  // Remove the wrapper object with index, map to a Point.\n  return [].concat.apply([], centeredRows) // eslint-disable-line prefer-spread\n    .sort((a, b) => (a.id - b.id))\n    .map((itemRect) => new Point(itemRect.left, itemRect.top));\n}\n","/**\n * Hyphenates a javascript style string to a css one. For example:\n * MozBoxSizing -> -moz-box-sizing.\n * @param {string} str The string to hyphenate.\n * @return {string} The hyphenated string.\n */\nexport default function hyphenate(str) {\n  return str.replace(/([A-Z])/g, (str, m1) => `-${m1.toLowerCase()}`);\n}\n","import TinyEmitter from 'tiny-emitter';\nimport matches from 'matches-selector';\nimport throttle from 'throttleit';\nimport parallel from 'array-parallel';\n\nimport Point from './point';\nimport Rect from './rect';\nimport ShuffleItem from './shuffle-item';\nimport Classes from './classes';\nimport getNumberStyle from './get-number-style';\nimport sorter from './sorter';\nimport { onTransitionEnd, cancelTransitionEnd } from './on-transition-end';\nimport {\n  getItemPosition,\n  getColumnSpan,\n  getAvailablePositions,\n  getShortColumn,\n  getCenteredPositions,\n} from './layout';\nimport arrayMax from './array-max';\nimport hyphenate from './hyphenate';\n\nfunction arrayUnique(x) {\n  return Array.from(new Set(x));\n}\n\n// Used for unique instance variables\nlet id = 0;\n\nclass Shuffle extends TinyEmitter {\n  /**\n   * Categorize, sort, and filter a responsive grid of items.\n   *\n   * @param {Element} element An element which is the parent container for the grid items.\n   * @param {Object} [options=Shuffle.options] Options object.\n   * @constructor\n   */\n  constructor(element, options = {}) {\n    super();\n    // eslint-disable-next-line prefer-object-spread\n    this.options = Object.assign({}, Shuffle.options, options);\n\n    // Allow misspelling of delimiter since that's how it used to be.\n    // Remove in v6.\n    if (this.options.delimeter) {\n      this.options.delimiter = this.options.delimeter;\n    }\n\n    this.lastSort = {};\n    this.group = Shuffle.ALL_ITEMS;\n    this.lastFilter = Shuffle.ALL_ITEMS;\n    this.isEnabled = true;\n    this.isDestroyed = false;\n    this.isInitialized = false;\n    this._transitions = [];\n    this.isTransitioning = false;\n    this._queue = [];\n\n    const el = this._getElementOption(element);\n\n    if (!el) {\n      throw new TypeError('Shuffle needs to be initialized with an element.');\n    }\n\n    this.element = el;\n    this.id = 'shuffle_' + id;\n    id += 1;\n\n    this._init();\n    this.isInitialized = true;\n  }\n\n  _init() {\n    this.items = this._getItems();\n    this.sortedItems = this.items;\n\n    this.options.sizer = this._getElementOption(this.options.sizer);\n\n    // Add class and invalidate styles\n    this.element.classList.add(Shuffle.Classes.BASE);\n\n    // Set initial css for each item\n    this._initItems(this.items);\n\n    // Bind resize events\n    this._onResize = this._getResizeFunction();\n    window.addEventListener('resize', this._onResize);\n\n    // If the page has not already emitted the `load` event, call layout on load.\n    // This avoids layout issues caused by images and fonts loading after the\n    // instance has been initialized.\n    if (document.readyState !== 'complete') {\n      const layout = this.layout.bind(this);\n      window.addEventListener('load', function onLoad() {\n        window.removeEventListener('load', onLoad);\n        layout();\n      });\n    }\n\n    // Get container css all in one request. Causes reflow\n    const containerCss = window.getComputedStyle(this.element, null);\n    const containerWidth = Shuffle.getSize(this.element).width;\n\n    // Add styles to the container if it doesn't have them.\n    this._validateStyles(containerCss);\n\n    // We already got the container's width above, no need to cause another\n    // reflow getting it again... Calculate the number of columns there will be\n    this._setColumns(containerWidth);\n\n    // Kick off!\n    this.filter(this.options.group, this.options.initialSort);\n\n    // The shuffle items haven't had transitions set on them yet so the user\n    // doesn't see the first layout. Set them now that the first layout is done.\n    // First, however, a synchronous layout must be caused for the previous\n    // styles to be applied without transitions.\n    this.element.offsetWidth; // eslint-disable-line no-unused-expressions\n    this.setItemTransitions(this.items);\n    this.element.style.transition = `height ${this.options.speed}ms ${this.options.easing}`;\n  }\n\n  /**\n   * Returns a throttled and proxied function for the resize handler.\n   * @return {function}\n   * @private\n   */\n  _getResizeFunction() {\n    const resizeFunction = this._handleResize.bind(this);\n    return this.options.throttle\n      ? this.options.throttle(resizeFunction, this.options.throttleTime)\n      : resizeFunction;\n  }\n\n  /**\n   * Retrieve an element from an option.\n   * @param {string|jQuery|Element} option The option to check.\n   * @return {?Element} The plain element or null.\n   * @private\n   */\n  _getElementOption(option) {\n    // If column width is a string, treat is as a selector and search for the\n    // sizer element within the outermost container\n    if (typeof option === 'string') {\n      return this.element.querySelector(option);\n    }\n\n    // Check for an element\n    if (option && option.nodeType && option.nodeType === 1) {\n      return option;\n    }\n\n    // Check for jQuery object\n    if (option && option.jquery) {\n      return option[0];\n    }\n\n    return null;\n  }\n\n  /**\n   * Ensures the shuffle container has the css styles it needs applied to it.\n   * @param {Object} styles Key value pairs for position and overflow.\n   * @private\n   */\n  _validateStyles(styles) {\n    // Position cannot be static.\n    if (styles.position === 'static') {\n      this.element.style.position = 'relative';\n    }\n\n    // Overflow has to be hidden.\n    if (styles.overflow !== 'hidden') {\n      this.element.style.overflow = 'hidden';\n    }\n  }\n\n  /**\n   * Filter the elements by a category.\n   * @param {string|string[]|function(Element):boolean} [category] Category to\n   *     filter by. If it's given, the last category will be used to filter the items.\n   * @param {Array} [collection] Optionally filter a collection. Defaults to\n   *     all the items.\n   * @return {{visible: ShuffleItem[], hidden: ShuffleItem[]}}\n   * @private\n   */\n  _filter(category = this.lastFilter, collection = this.items) {\n    const set = this._getFilteredSets(category, collection);\n\n    // Individually add/remove hidden/visible classes\n    this._toggleFilterClasses(set);\n\n    // Save the last filter in case elements are appended.\n    this.lastFilter = category;\n\n    // This is saved mainly because providing a filter function (like searching)\n    // will overwrite the `lastFilter` property every time its called.\n    if (typeof category === 'string') {\n      this.group = category;\n    }\n\n    return set;\n  }\n\n  /**\n   * Returns an object containing the visible and hidden elements.\n   * @param {string|string[]|function(Element):boolean} category Category or function to filter by.\n   * @param {ShuffleItem[]} items A collection of items to filter.\n   * @return {{visible: ShuffleItem[], hidden: ShuffleItem[]}}\n   * @private\n   */\n  _getFilteredSets(category, items) {\n    let visible = [];\n    const hidden = [];\n\n    // category === 'all', add visible class to everything\n    if (category === Shuffle.ALL_ITEMS) {\n      visible = items;\n\n      // Loop through each item and use provided function to determine\n      // whether to hide it or not.\n    } else {\n      items.forEach((item) => {\n        if (this._doesPassFilter(category, item.element)) {\n          visible.push(item);\n        } else {\n          hidden.push(item);\n        }\n      });\n    }\n\n    return {\n      visible,\n      hidden,\n    };\n  }\n\n  /**\n   * Test an item to see if it passes a category.\n   * @param {string|string[]|function():boolean} category Category or function to filter by.\n   * @param {Element} element An element to test.\n   * @return {boolean} Whether it passes the category/filter.\n   * @private\n   */\n  _doesPassFilter(category, element) {\n    if (typeof category === 'function') {\n      return category.call(element, element, this);\n    }\n\n    // Check each element's data-groups attribute against the given category.\n    const attr = element.getAttribute('data-' + Shuffle.FILTER_ATTRIBUTE_KEY);\n    const keys = this.options.delimiter\n      ? attr.split(this.options.delimiter)\n      : JSON.parse(attr);\n\n    function testCategory(category) {\n      return keys.includes(category);\n    }\n\n    if (Array.isArray(category)) {\n      if (this.options.filterMode === Shuffle.FilterMode.ANY) {\n        return category.some(testCategory);\n      }\n      return category.every(testCategory);\n    }\n\n    return keys.includes(category);\n  }\n\n  /**\n   * Toggles the visible and hidden class names.\n   * @param {{visible, hidden}} Object with visible and hidden arrays.\n   * @private\n   */\n  _toggleFilterClasses({ visible, hidden }) {\n    visible.forEach((item) => {\n      item.show();\n    });\n\n    hidden.forEach((item) => {\n      item.hide();\n    });\n  }\n\n  /**\n   * Set the initial css for each item\n   * @param {ShuffleItem[]} items Set to initialize.\n   * @private\n   */\n  _initItems(items) {\n    items.forEach((item) => {\n      item.init();\n    });\n  }\n\n  /**\n   * Remove element reference and styles.\n   * @param {ShuffleItem[]} items Set to dispose.\n   * @private\n   */\n  _disposeItems(items) {\n    items.forEach((item) => {\n      item.dispose();\n    });\n  }\n\n  /**\n   * Updates the visible item count.\n   * @private\n   */\n  _updateItemCount() {\n    this.visibleItems = this._getFilteredItems().length;\n  }\n\n  /**\n   * Sets css transform transition on a group of elements. This is not executed\n   * at the same time as `item.init` so that transitions don't occur upon\n   * initialization of a new Shuffle instance.\n   * @param {ShuffleItem[]} items Shuffle items to set transitions on.\n   * @protected\n   */\n  setItemTransitions(items) {\n    const { speed, easing } = this.options;\n    const positionProps = this.options.useTransforms ? ['transform'] : ['top', 'left'];\n\n    // Allow users to transtion other properties if they exist in the `before`\n    // css mapping of the shuffle item.\n    const cssProps = Object.keys(ShuffleItem.Css.HIDDEN.before).map((k) => hyphenate(k));\n    const properties = positionProps.concat(cssProps).join();\n\n    items.forEach((item) => {\n      item.element.style.transitionDuration = speed + 'ms';\n      item.element.style.transitionTimingFunction = easing;\n      item.element.style.transitionProperty = properties;\n    });\n  }\n\n  _getItems() {\n    return Array.from(this.element.children)\n      .filter((el) => matches(el, this.options.itemSelector))\n      .map((el) => new ShuffleItem(el, this.options.isRTL));\n  }\n\n  /**\n   * Combine the current items array with a new one and sort it by DOM order.\n   * @param {ShuffleItem[]} items Items to track.\n   * @return {ShuffleItem[]}\n   */\n  _mergeNewItems(items) {\n    const children = Array.from(this.element.children);\n    return sorter(this.items.concat(items), {\n      by(element) {\n        return children.indexOf(element);\n      },\n    });\n  }\n\n  _getFilteredItems() {\n    return this.items.filter((item) => item.isVisible);\n  }\n\n  _getConcealedItems() {\n    return this.items.filter((item) => !item.isVisible);\n  }\n\n  /**\n   * Returns the column size, based on column width and sizer options.\n   * @param {number} containerWidth Size of the parent container.\n   * @param {number} gutterSize Size of the gutters.\n   * @return {number}\n   * @private\n   */\n  _getColumnSize(containerWidth, gutterSize) {\n    let size;\n\n    // If the columnWidth property is a function, then the grid is fluid\n    if (typeof this.options.columnWidth === 'function') {\n      size = this.options.columnWidth(containerWidth);\n\n      // columnWidth option isn't a function, are they using a sizing element?\n    } else if (this.options.sizer) {\n      size = Shuffle.getSize(this.options.sizer).width;\n\n      // if not, how about the explicitly set option?\n    } else if (this.options.columnWidth) {\n      size = this.options.columnWidth;\n\n      // or use the size of the first item\n    } else if (this.items.length > 0) {\n      size = Shuffle.getSize(this.items[0].element, true).width;\n\n      // if there's no items, use size of container\n    } else {\n      size = containerWidth;\n    }\n\n    // Don't let them set a column width of zero.\n    if (size === 0) {\n      size = containerWidth;\n    }\n\n    return size + gutterSize;\n  }\n\n  /**\n   * Returns the gutter size, based on gutter width and sizer options.\n   * @param {number} containerWidth Size of the parent container.\n   * @return {number}\n   * @private\n   */\n  _getGutterSize(containerWidth) {\n    let size;\n    if (typeof this.options.gutterWidth === 'function') {\n      size = this.options.gutterWidth(containerWidth);\n    } else if (this.options.sizer) {\n      size = getNumberStyle(this.options.sizer, 'marginLeft');\n    } else {\n      size = this.options.gutterWidth;\n    }\n\n    return size;\n  }\n\n  /**\n   * Calculate the number of columns to be used. Gets css if using sizer element.\n   * @param {number} [containerWidth] Optionally specify a container width if\n   *    it's already available.\n   */\n  _setColumns(containerWidth = Shuffle.getSize(this.element).width) {\n    const gutter = this._getGutterSize(containerWidth);\n    const columnWidth = this._getColumnSize(containerWidth, gutter);\n    let calculatedColumns = (containerWidth + gutter) / columnWidth;\n\n    // Widths given from getStyles are not precise enough...\n    if (Math.abs(Math.round(calculatedColumns) - calculatedColumns) < this.options.columnThreshold) {\n      // e.g. calculatedColumns = 11.998876\n      calculatedColumns = Math.round(calculatedColumns);\n    }\n\n    this.cols = Math.max(Math.floor(calculatedColumns || 0), 1);\n    this.containerWidth = containerWidth;\n    this.colWidth = columnWidth;\n  }\n\n  /**\n   * Adjust the height of the grid\n   */\n  _setContainerSize() {\n    this.element.style.height = this._getContainerSize() + 'px';\n  }\n\n  /**\n   * Based on the column heights, it returns the biggest one.\n   * @return {number}\n   * @private\n   */\n  _getContainerSize() {\n    return arrayMax(this.positions);\n  }\n\n  /**\n   * Get the clamped stagger amount.\n   * @param {number} index Index of the item to be staggered.\n   * @return {number}\n   */\n  _getStaggerAmount(index) {\n    return Math.min(index * this.options.staggerAmount, this.options.staggerAmountMax);\n  }\n\n  /**\n   * Emit an event from this instance.\n   * @param {string} name Event name.\n   * @param {Object} [data={}] Optional object data.\n   */\n  _dispatch(name, data = {}) {\n    if (this.isDestroyed) {\n      return;\n    }\n\n    data.shuffle = this;\n    this.emit(name, data);\n  }\n\n  /**\n   * Zeros out the y columns array, which is used to determine item placement.\n   * @private\n   */\n  _resetCols() {\n    let i = this.cols;\n    this.positions = [];\n    while (i) {\n      i -= 1;\n      this.positions.push(0);\n    }\n  }\n\n  /**\n   * Loops through each item that should be shown and calculates the x, y position.\n   * @param {ShuffleItem[]} items Array of items that will be shown/layed\n   *     out in order in their array.\n   */\n  _layout(items) {\n    const itemPositions = this._getNextPositions(items);\n\n    let count = 0;\n    items.forEach((item, i) => {\n      function callback() {\n        item.applyCss(ShuffleItem.Css.VISIBLE.after);\n      }\n\n      // If the item will not change its position, do not add it to the render\n      // queue. Transitions don't fire when setting a property to the same value.\n      if (Point.equals(item.point, itemPositions[i]) && !item.isHidden) {\n        item.applyCss(ShuffleItem.Css.VISIBLE.before);\n        callback();\n        return;\n      }\n\n      item.point = itemPositions[i];\n      item.scale = ShuffleItem.Scale.VISIBLE;\n      item.isHidden = false;\n\n      // Clone the object so that the `before` object isn't modified when the\n      // transition delay is added.\n      const styles = this.getStylesForTransition(item, ShuffleItem.Css.VISIBLE.before);\n      styles.transitionDelay = this._getStaggerAmount(count) + 'ms';\n\n      this._queue.push({\n        item,\n        styles,\n        callback,\n      });\n\n      count += 1;\n    });\n  }\n\n  /**\n   * Return an array of Point instances representing the future positions of\n   * each item.\n   * @param {ShuffleItem[]} items Array of sorted shuffle items.\n   * @return {Point[]}\n   * @private\n   */\n  _getNextPositions(items) {\n    // If position data is going to be changed, add the item's size to the\n    // transformer to allow for calculations.\n    if (this.options.isCentered) {\n      const itemsData = items.map((item, i) => {\n        const itemSize = Shuffle.getSize(item.element, true);\n        const point = this._getItemPosition(itemSize);\n        return new Rect(point.x, point.y, itemSize.width, itemSize.height, i);\n      });\n\n      return this.getTransformedPositions(itemsData, this.containerWidth);\n    }\n\n    // If no transforms are going to happen, simply return an array of the\n    // future points of each item.\n    return items.map((item) => this._getItemPosition(Shuffle.getSize(item.element, true)));\n  }\n\n  /**\n   * Determine the location of the next item, based on its size.\n   * @param {{width: number, height: number}} itemSize Object with width and height.\n   * @return {Point}\n   * @private\n   */\n  _getItemPosition(itemSize) {\n    return getItemPosition({\n      itemSize,\n      positions: this.positions,\n      gridSize: this.colWidth,\n      total: this.cols,\n      threshold: this.options.columnThreshold,\n      buffer: this.options.buffer,\n    });\n  }\n\n  /**\n   * Mutate positions before they're applied.\n   * @param {Rect[]} itemRects Item data objects.\n   * @param {number} containerWidth Width of the containing element.\n   * @return {Point[]}\n   * @protected\n   */\n  getTransformedPositions(itemRects, containerWidth) {\n    return getCenteredPositions(itemRects, containerWidth);\n  }\n\n  /**\n   * Hides the elements that don't match our filter.\n   * @param {ShuffleItem[]} collection Collection to shrink.\n   * @private\n   */\n  _shrink(collection = this._getConcealedItems()) {\n    let count = 0;\n    collection.forEach((item) => {\n      function callback() {\n        item.applyCss(ShuffleItem.Css.HIDDEN.after);\n      }\n\n      // Continuing would add a transitionend event listener to the element, but\n      // that listener would not execute because the transform and opacity would\n      // stay the same.\n      // The callback is executed here because it is not guaranteed to be called\n      // after the transitionend event because the transitionend could be\n      // canceled if another animation starts.\n      if (item.isHidden) {\n        item.applyCss(ShuffleItem.Css.HIDDEN.before);\n        callback();\n        return;\n      }\n\n      item.scale = ShuffleItem.Scale.HIDDEN;\n      item.isHidden = true;\n\n      const styles = this.getStylesForTransition(item, ShuffleItem.Css.HIDDEN.before);\n      styles.transitionDelay = this._getStaggerAmount(count) + 'ms';\n\n      this._queue.push({\n        item,\n        styles,\n        callback,\n      });\n\n      count += 1;\n    });\n  }\n\n  /**\n   * Resize handler.\n   * @private\n   */\n  _handleResize() {\n    // If shuffle is disabled, destroyed, don't do anything\n    if (!this.isEnabled || this.isDestroyed) {\n      return;\n    }\n\n    this.update();\n  }\n\n  /**\n   * Returns styles which will be applied to the an item for a transition.\n   * @param {ShuffleItem} item Item to get styles for. Should have updated\n   *   scale and point properties.\n   * @param {Object} styleObject Extra styles that will be used in the transition.\n   * @return {!Object} Transforms for transitions, left/top for animate.\n   * @protected\n   */\n  getStylesForTransition(item, styleObject) {\n    // Clone the object to avoid mutating the original.\n    // eslint-disable-next-line prefer-object-spread\n    const styles = Object.assign({}, styleObject);\n\n    if (this.options.useTransforms) {\n      const sign = this.options.isRTL ? '-' : '';\n      const x = this.options.roundTransforms ? Math.round(item.point.x) : item.point.x;\n      const y = this.options.roundTransforms ? Math.round(item.point.y) : item.point.y;\n      styles.transform = `translate(${sign}${x}px, ${y}px) scale(${item.scale})`;\n    } else {\n      if (this.options.isRTL) {\n        styles.right = item.point.x + 'px';\n      } else {\n        styles.left = item.point.x + 'px';\n      }\n      styles.top = item.point.y + 'px';\n    }\n\n    return styles;\n  }\n\n  /**\n   * Listen for the transition end on an element and execute the itemCallback\n   * when it finishes.\n   * @param {Element} element Element to listen on.\n   * @param {function} itemCallback Callback for the item.\n   * @param {function} done Callback to notify `parallel` that this one is done.\n   */\n  _whenTransitionDone(element, itemCallback, done) {\n    const id = onTransitionEnd(element, (evt) => {\n      itemCallback();\n      done(null, evt);\n    });\n\n    this._transitions.push(id);\n  }\n\n  /**\n   * Return a function which will set CSS styles and call the `done` function\n   * when (if) the transition finishes.\n   * @param {Object} opts Transition object.\n   * @return {function} A function to be called with a `done` function.\n   */\n  _getTransitionFunction(opts) {\n    return (done) => {\n      opts.item.applyCss(opts.styles);\n      this._whenTransitionDone(opts.item.element, opts.callback, done);\n    };\n  }\n\n  /**\n   * Execute the styles gathered in the style queue. This applies styles to elements,\n   * triggering transitions.\n   * @private\n   */\n  _processQueue() {\n    if (this.isTransitioning) {\n      this._cancelMovement();\n    }\n\n    const hasSpeed = this.options.speed > 0;\n    const hasQueue = this._queue.length > 0;\n\n    if (hasQueue && hasSpeed && this.isInitialized) {\n      this._startTransitions(this._queue);\n    } else if (hasQueue) {\n      this._styleImmediately(this._queue);\n      this._dispatch(Shuffle.EventType.LAYOUT);\n\n      // A call to layout happened, but none of the newly visible items will\n      // change position or the transition duration is zero, which will not trigger\n      // the transitionend event.\n    } else {\n      this._dispatch(Shuffle.EventType.LAYOUT);\n    }\n\n    // Remove everything in the style queue\n    this._queue.length = 0;\n  }\n\n  /**\n   * Wait for each transition to finish, the emit the layout event.\n   * @param {Object[]} transitions Array of transition objects.\n   */\n  _startTransitions(transitions) {\n    // Set flag that shuffle is currently in motion.\n    this.isTransitioning = true;\n\n    // Create an array of functions to be called.\n    const callbacks = transitions.map((obj) => this._getTransitionFunction(obj));\n\n    parallel(callbacks, this._movementFinished.bind(this));\n  }\n\n  _cancelMovement() {\n    // Remove the transition end event for each listener.\n    this._transitions.forEach(cancelTransitionEnd);\n\n    // Reset the array.\n    this._transitions.length = 0;\n\n    // Show it's no longer active.\n    this.isTransitioning = false;\n  }\n\n  /**\n   * Apply styles without a transition.\n   * @param {Object[]} objects Array of transition objects.\n   * @private\n   */\n  _styleImmediately(objects) {\n    if (objects.length) {\n      const elements = objects.map((obj) => obj.item.element);\n\n      Shuffle._skipTransitions(elements, () => {\n        objects.forEach((obj) => {\n          obj.item.applyCss(obj.styles);\n          obj.callback();\n        });\n      });\n    }\n  }\n\n  _movementFinished() {\n    this._transitions.length = 0;\n    this.isTransitioning = false;\n    this._dispatch(Shuffle.EventType.LAYOUT);\n  }\n\n  /**\n   * The magic. This is what makes the plugin 'shuffle'\n   * @param {string|string[]|function(Element):boolean} [category] Category to filter by.\n   *     Can be a function, string, or array of strings.\n   * @param {SortOptions} [sortOptions] A sort object which can sort the visible set\n   */\n  filter(category, sortOptions) {\n    if (!this.isEnabled) {\n      return;\n    }\n\n    if (!category || (category && category.length === 0)) {\n      category = Shuffle.ALL_ITEMS; // eslint-disable-line no-param-reassign\n    }\n\n    this._filter(category);\n\n    // Shrink each hidden item\n    this._shrink();\n\n    // How many visible elements?\n    this._updateItemCount();\n\n    // Update transforms on visible elements so they will animate to their new positions.\n    this.sort(sortOptions);\n  }\n\n  /**\n   * Gets the visible elements, sorts them, and passes them to layout.\n   * @param {SortOptions} [sortOptions] The options object to pass to `sorter`.\n   */\n  sort(sortOptions = this.lastSort) {\n    if (!this.isEnabled) {\n      return;\n    }\n\n    this._resetCols();\n\n    const items = sorter(this._getFilteredItems(), sortOptions);\n    this.sortedItems = items;\n\n    this._layout(items);\n\n    // `_layout` always happens after `_shrink`, so it's safe to process the style\n    // queue here with styles from the shrink method.\n    this._processQueue();\n\n    // Adjust the height of the container.\n    this._setContainerSize();\n\n    this.lastSort = sortOptions;\n  }\n\n  /**\n   * Reposition everything.\n   * @param {boolean} [isOnlyLayout=false] If true, column and gutter widths won't be recalculated.\n   */\n  update(isOnlyLayout = false) {\n    if (this.isEnabled) {\n      if (!isOnlyLayout) {\n        // Get updated colCount\n        this._setColumns();\n      }\n\n      // Layout items\n      this.sort();\n    }\n  }\n\n  /**\n   * Use this instead of `update()` if you don't need the columns and gutters updated\n   * Maybe an image inside `shuffle` loaded (and now has a height), which means calculations\n   * could be off.\n   */\n  layout() {\n    this.update(true);\n  }\n\n  /**\n   * New items have been appended to shuffle. Mix them in with the current\n   * filter or sort status.\n   * @param {Element[]} newItems Collection of new items.\n   */\n  add(newItems) {\n    const items = arrayUnique(newItems).map((el) => new ShuffleItem(el, this.options.isRTL));\n\n    // Add classes and set initial positions.\n    this._initItems(items);\n\n    // Determine which items will go with the current filter.\n    this._resetCols();\n\n    const allItems = this._mergeNewItems(items);\n    const sortedItems = sorter(allItems, this.lastSort);\n    const allSortedItemsSet = this._filter(this.lastFilter, sortedItems);\n\n    const isNewItem = (item) => items.includes(item);\n    const applyHiddenState = (item) => {\n      item.scale = ShuffleItem.Scale.HIDDEN;\n      item.isHidden = true;\n      item.applyCss(ShuffleItem.Css.HIDDEN.before);\n      item.applyCss(ShuffleItem.Css.HIDDEN.after);\n    };\n\n    // Layout all items again so that new items get positions.\n    // Synchonously apply positions.\n    const itemPositions = this._getNextPositions(allSortedItemsSet.visible);\n    allSortedItemsSet.visible.forEach((item, i) => {\n      if (isNewItem(item)) {\n        item.point = itemPositions[i];\n        applyHiddenState(item);\n        item.applyCss(this.getStylesForTransition(item, {}));\n      }\n    });\n\n    allSortedItemsSet.hidden.forEach((item) => {\n      if (isNewItem(item)) {\n        applyHiddenState(item);\n      }\n    });\n\n    // Cause layout so that the styles above are applied.\n    this.element.offsetWidth; // eslint-disable-line no-unused-expressions\n\n    // Add transition to each item.\n    this.setItemTransitions(items);\n\n    // Update the list of items.\n    this.items = this._mergeNewItems(items);\n\n    // Update layout/visibility of new and old items.\n    this.filter(this.lastFilter);\n  }\n\n  /**\n   * Disables shuffle from updating dimensions and layout on resize\n   */\n  disable() {\n    this.isEnabled = false;\n  }\n\n  /**\n   * Enables shuffle again\n   * @param {boolean} [isUpdateLayout=true] if undefined, shuffle will update columns and gutters\n   */\n  enable(isUpdateLayout = true) {\n    this.isEnabled = true;\n    if (isUpdateLayout) {\n      this.update();\n    }\n  }\n\n  /**\n   * Remove 1 or more shuffle items.\n   * @param {Element[]} elements An array containing one or more\n   *     elements in shuffle\n   * @return {Shuffle} The shuffle instance.\n   */\n  remove(elements) {\n    if (!elements.length) {\n      return;\n    }\n\n    const collection = arrayUnique(elements);\n\n    const oldItems = collection\n      .map((element) => this.getItemByElement(element))\n      .filter((item) => !!item);\n\n    const handleLayout = () => {\n      this._disposeItems(oldItems);\n\n      // Remove the collection in the callback\n      collection.forEach((element) => {\n        element.parentNode.removeChild(element);\n      });\n\n      this._dispatch(Shuffle.EventType.REMOVED, { collection });\n    };\n\n    // Hide collection first.\n    this._toggleFilterClasses({\n      visible: [],\n      hidden: oldItems,\n    });\n\n    this._shrink(oldItems);\n\n    this.sort();\n\n    // Update the list of items here because `remove` could be called again\n    // with an item that is in the process of being removed.\n    this.items = this.items.filter((item) => !oldItems.includes(item));\n    this._updateItemCount();\n\n    this.once(Shuffle.EventType.LAYOUT, handleLayout);\n  }\n\n  /**\n   * Retrieve a shuffle item by its element.\n   * @param {Element} element Element to look for.\n   * @return {?ShuffleItem} A shuffle item or undefined if it's not found.\n   */\n  getItemByElement(element) {\n    return this.items.find((item) => item.element === element);\n  }\n\n  /**\n   * Dump the elements currently stored and reinitialize all child elements which\n   * match the `itemSelector`.\n   */\n  resetItems() {\n    // Remove refs to current items.\n    this._disposeItems(this.items);\n    this.isInitialized = false;\n\n    // Find new items in the DOM.\n    this.items = this._getItems();\n\n    // Set initial styles on the new items.\n    this._initItems(this.items);\n\n    this.once(Shuffle.EventType.LAYOUT, () => {\n      // Add transition to each item.\n      this.setItemTransitions(this.items);\n      this.isInitialized = true;\n    });\n\n    // Lay out all items.\n    this.filter(this.lastFilter);\n  }\n\n  /**\n   * Destroys shuffle, removes events, styles, and classes\n   */\n  destroy() {\n    this._cancelMovement();\n    window.removeEventListener('resize', this._onResize);\n\n    // Reset container styles\n    this.element.classList.remove('shuffle');\n    this.element.removeAttribute('style');\n\n    // Reset individual item styles\n    this._disposeItems(this.items);\n\n    this.items.length = 0;\n    this._transitions.length = 0;\n\n    // Null DOM references\n    this.options.sizer = null;\n    this.element = null;\n\n    // Set a flag so if a debounced resize has been triggered,\n    // it can first check if it is actually isDestroyed and not doing anything\n    this.isDestroyed = true;\n    this.isEnabled = false;\n  }\n\n  /**\n   * Returns the outer width of an element, optionally including its margins.\n   *\n   * There are a few different methods for getting the width of an element, none of\n   * which work perfectly for all Shuffle's use cases.\n   *\n   * 1. getBoundingClientRect() `left` and `right` properties.\n   *   - Accounts for transform scaled elements, making it useless for Shuffle\n   *   elements which have shrunk.\n   * 2. The `offsetWidth` property.\n   *   - This value stays the same regardless of the elements transform property,\n   *   however, it does not return subpixel values.\n   * 3. getComputedStyle()\n   *   - This works great Chrome, Firefox, Safari, but IE<=11 does not include\n   *   padding and border when box-sizing: border-box is set, requiring a feature\n   *   test and extra work to add the padding back for IE and other browsers which\n   *   follow the W3C spec here.\n   *\n   * @param {Element} element The element.\n   * @param {boolean} [includeMargins=false] Whether to include margins.\n   * @return {{width: number, height: number}} The width and height.\n   */\n  static getSize(element, includeMargins = false) {\n    // Store the styles so that they can be used by others without asking for it again.\n    const styles = window.getComputedStyle(element, null);\n    let width = getNumberStyle(element, 'width', styles);\n    let height = getNumberStyle(element, 'height', styles);\n\n    if (includeMargins) {\n      const marginLeft = getNumberStyle(element, 'marginLeft', styles);\n      const marginRight = getNumberStyle(element, 'marginRight', styles);\n      const marginTop = getNumberStyle(element, 'marginTop', styles);\n      const marginBottom = getNumberStyle(element, 'marginBottom', styles);\n      width += marginLeft + marginRight;\n      height += marginTop + marginBottom;\n    }\n\n    return {\n      width,\n      height,\n    };\n  }\n\n  /**\n   * Change a property or execute a function which will not have a transition\n   * @param {Element[]} elements DOM elements that won't be transitioned.\n   * @param {function} callback A function which will be called while transition\n   *     is set to 0ms.\n   * @private\n   */\n  static _skipTransitions(elements, callback) {\n    const zero = '0ms';\n\n    // Save current duration and delay.\n    const data = elements.map((element) => {\n      const { style } = element;\n      const duration = style.transitionDuration;\n      const delay = style.transitionDelay;\n\n      // Set the duration to zero so it happens immediately\n      style.transitionDuration = zero;\n      style.transitionDelay = zero;\n\n      return {\n        duration,\n        delay,\n      };\n    });\n\n    callback();\n\n    // Cause forced synchronous layout.\n    elements[0].offsetWidth; // eslint-disable-line no-unused-expressions\n\n    // Put the duration back\n    elements.forEach((element, i) => {\n      element.style.transitionDuration = data[i].duration;\n      element.style.transitionDelay = data[i].delay;\n    });\n  }\n}\n\nShuffle.ShuffleItem = ShuffleItem;\n\nShuffle.ALL_ITEMS = 'all';\nShuffle.FILTER_ATTRIBUTE_KEY = 'groups';\n\n/** @enum {string} */\nShuffle.EventType = {\n  LAYOUT: 'shuffle:layout',\n  REMOVED: 'shuffle:removed',\n};\n\n/** @enum {string} */\nShuffle.Classes = Classes;\n\n/** @enum {string} */\nShuffle.FilterMode = {\n  ANY: 'any',\n  ALL: 'all',\n};\n\n// Overrideable options\nShuffle.options = {\n  // Initial filter group.\n  group: Shuffle.ALL_ITEMS,\n\n  // Transition/animation speed (milliseconds).\n  speed: 250,\n\n  // CSS easing function to use.\n  easing: 'cubic-bezier(0.4, 0.0, 0.2, 1)',\n\n  // e.g. '.picture-item'.\n  itemSelector: '*',\n\n  // Element or selector string. Use an element to determine the size of columns\n  // and gutters.\n  sizer: null,\n\n  // A static number or function that tells the plugin how wide the gutters\n  // between columns are (in pixels).\n  gutterWidth: 0,\n\n  // A static number or function that returns a number which tells the plugin\n  // how wide the columns are (in pixels).\n  columnWidth: 0,\n\n  // If your group is not json, and is comma delimeted, you could set delimiter\n  // to ','.\n  delimiter: null,\n\n  // Useful for percentage based heights when they might not always be exactly\n  // the same (in pixels).\n  buffer: 0,\n\n  // Reading the width of elements isn't precise enough and can cause columns to\n  // jump between values.\n  columnThreshold: 0.01,\n\n  // Shuffle can be isInitialized with a sort object. It is the same object\n  // given to the sort method.\n  initialSort: null,\n\n  // By default, shuffle will throttle resize events. This can be changed or\n  // removed.\n  throttle,\n\n  // How often shuffle can be called on resize (in milliseconds).\n  throttleTime: 300,\n\n  // Transition delay offset for each item in milliseconds.\n  staggerAmount: 15,\n\n  // Maximum stagger delay in milliseconds.\n  staggerAmountMax: 150,\n\n  // Whether to use transforms or absolute positioning.\n  useTransforms: true,\n\n  // Affects using an array with filter. e.g. `filter(['one', 'two'])`. With \"any\",\n  // the element passes the test if any of its groups are in the array. With \"all\",\n  // the element only passes if all groups are in the array.\n  filterMode: Shuffle.FilterMode.ANY,\n\n  // Attempt to center grid items in each row.\n  isCentered: false,\n\n  // Attempt to align grid items to right.\n  isRTL: false,\n\n  // Whether to round pixel values used in translate(x, y). This usually avoids\n  // blurriness.\n  roundTransforms: true,\n};\n\nShuffle.Point = Point;\nShuffle.Rect = Rect;\n\n// Expose for testing. Hack at your own risk.\nShuffle.__sorter = sorter;\nShuffle.__getColumnSpan = getColumnSpan;\nShuffle.__getAvailablePositions = getAvailablePositions;\nShuffle.__getShortColumn = getShortColumn;\nShuffle.__getCenteredPositions = getCenteredPositions;\n\nexport default Shuffle;\n"]}